<div class="container">
  <header>
    <h1><%= @event.name %></h1>
    <%= link_to new_event_upload_path(@event), class: "btn btn-primary" do %>
      Capture Moment
    <% end %>
  </header>

  <div class="uploads-grid" id="uploadsGrid">
    <% @event.uploads.each do |upload| %>
      <div class="grid-item">
        <% if upload.file? %>
          <div class="image-container">
            <%= image_tag(upload.file.url, class: "upload-image", loading: "lazy") %>
            <div class="overlay">
              <p class="caption" id="caption-<%= upload.id %>"><%= upload.caption %></p>
              <div class="action-buttons">
                <%= button_to event_upload_path(@event, upload), method: :delete, data: { confirm: 'Are you sure?' }, class: "btn btn-icon" do %>
                  <i class="fas fa-trash"></i>
                <% end %>
                <%= button_to favorite_event_upload_path(@event, upload), method: :post, class: "btn btn-icon" do %>
                  <i class="fas fa-heart"></i>
                <% end %>
                <%= button_to generate_caption_event_upload_path(@event, upload), method: :post, remote: true, class: 'btn btn-icon generate-caption-btn', id: "generate-caption-#{upload.id}" do %>
                  <i class="fas fa-magic"></i>
                <% end %>
              </div>
            </div>
          </div>
        <% end %>
      </div>
    <% end %>

    <% if @messages.present? %>
      <% @messages.each do |message| %>
        <div class="grid-item message-card">
          <p class="message-user"><%= message.user.present? ? message.user.name : "Anonymous" %></p>
          <p class="message-content"><%= message.content %></p>
        </div>
      <% end %>
    <% end %>
  </div>
</div>

<style>
  :root {
    --background-color: #f0f2f5;
    --card-background: #ffffff;
    --text-color: #1c1e21;
    --primary-color: #0095f6;
    --secondary-color: #00376b;
    --accent-color: #fbad50;
    --border-color: #dbdbdb;
    --overlay-color: rgba(0, 0, 0, 0.6);
  }

  body {
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue', sans-serif;
    background-color: var(--background-color);
    color: var(--text-color);
    margin: 0;
    padding: 0;
  }

  .container {
    max-width: 100%;
    padding: 20px;
  }

  header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 20px;
  }

  h1 {
    font-size: 28px;
    font-weight: 600;
  }

  .btn-primary {
    background-color: white;
    color: var(--primary-color);
    padding: 8px 16px;
    border-radius: 20px;
    text-decoration: none;
    font-weight: 600;
    font-size: 14px;
    border: 1px solid var(--primary-color);
    display: flex;
    align-items: center;
    transition: all 0.3s ease;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }

  .btn-primary:hover {
    background-color: var(--primary-color);
    color: white;
    transform: translateY(-2px);
    box-shadow: 0 4px 6px rgba(0, 122, 255, 0.2);
  }

  .uploads-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 16px;
  }

  .grid-item {
    break-inside: avoid;
    margin-bottom: 16px;
  }

  .image-container {
    position: relative;
    overflow: hidden;
    border-radius: var(--border-radius);
  }

  .upload-image {
    width: 100%;
    height: auto; /* Maintain aspect ratio */
    display: block;
  }

  .overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.5);
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    padding: 16px;
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .image-container:hover .overlay {
    opacity: 1;
  }

  .caption {
    color: white;
    font-size: 16px;
    margin: 0;
  }

  .action-buttons {
    display: flex;
    justify-content: flex-end;
  }

  .btn-icon {
    background: none;
    border: none;
    color: white;
    font-size: 20px;
    cursor: pointer;
    padding: 8px;
    transition: transform 0.2s ease;
  }

  .btn-icon:hover {
    color: var(--primary-color);
    transform: scale(1.1);
  }

  .message-card {
    background-color: var(--card-background);
    border-radius: var(--border-radius);
    padding: 16px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  }

  .message-user {
    font-weight: 600;
    margin-bottom: 8px;
    font-size: 14px;
  }

  .message-content {
    font-size: 14px;
    line-height: 1.4;
  }

  @media (max-width: 1200px) {
    .uploads-grid {
      grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    }
  }

  @media (max-width: 900px) {
    .uploads-grid {
      grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
    }
  }

  @media (max-width: 600px) {
    .uploads-grid {
      grid-template-columns: 1fr;
    }
  }
</style>

<script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/js/all.min.js"></script>
<script>
document.addEventListener('DOMContentLoaded', function() {
  document.querySelectorAll('.generate-caption-btn').forEach(function(button) {
    button.addEventListener('click', function(e) {
      e.preventDefault();
      var uploadId = this.id.split('-').pop();
      var url = this.form.action;

      fetch(url, {
        method: 'POST',
        headers: {
          'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content,
          'Content-Type': 'application/json',
          'Accept': 'application/json'
        },
        credentials: 'same-origin'
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          document.getElementById('caption-' + uploadId).textContent = data.caption;
        } else {
          alert('Failed to generate caption: ' + data.message);
        }
      })
      .catch(error => {
        console.error('Error:', error);
        alert('An error occurred while generating the caption.');
      });
    });
  });
});
</script>
